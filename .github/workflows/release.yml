name: Release and Checks

on:
  pull_request:
    branches:
      - dev
      - main
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - closed

permissions:
  contents: write
  packages: write

env:
  NODE_VERSION: '18.x'
  NPM_REGISTRY: 'https://registry.npmjs.org'
  BUMP: 'patch'

jobs:
  checks:
    name: Checagens de PR
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Instalar dependências
        run: npm ci

      - name: Verificar READMEs
        run: npm run verify:readmes

      - name: Lint
        run: npm run lint

      - name: Executar testes
        run: npm test

  release:
    name: Release após merge na main
    if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "${{ env.NODE_VERSION }}"
          registry-url: "${{ env.NPM_REGISTRY }}"

      - name: Instalar dependências
        run: npm ci

      - name: Verificar READMEs
        run: npm run verify:readmes

      - name: Lint
        run: npm run lint

      - name: Executar testes
        run: npm test

      - name: Build
        run: npm run build

      - name: Configurar Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Incrementar versão
        run: |
          npm version "${{ env.BUMP }}" -m "chore(release): v%s"

      - name: Push e tags
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push --follow-tags

      - name: Determinar versão
        id: pkg
        run: echo "version=$(node -p \"require('./package.json').version\")" >> $GITHUB_OUTPUT

      - name: Criar Release
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ steps.pkg.outputs.version }}"
          generateReleaseNotes: 'true'
          token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Publicar no npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm publish --access public